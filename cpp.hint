// ヒント ファイルは、Visual Studio IDE が Visual C++ 識別子を解釈するのに役立ちます
// 関数およびマクロの名前などです。
// 詳細については次を参照してください https://go.microsoft.com/fwlink/?linkid=865984
#define TEMPLATE_ASSIGNMENT_OPERATOR(t, __VA_ARGS__) TEMPLATE_ASSIGNMENT_OPERATOR_base(t, +, __VA_ARGS__) TEMPLATE_ASSIGNMENT_OPERATOR_base(t, -, __VA_ARGS__) TEMPLATE_ASSIGNMENT_OPERATOR_base(t, *, __VA_ARGS__) TEMPLATE_ASSIGNMENT_OPERATOR_base(t, /, __VA_ARGS__)
#define TEMPLATE_COMPARE_OPERATOR(t, _min) TEMPLATE_COMPARE_OPERATOR_s1(t, _min, const, &) TEMPLATE_COMPARE_OPERATOR_s1(t, _min, , &&)
#define TEMPLATE_COMPARE_OPERATOR(t, _min) TEMPLATE_COMPARE_OPERATOR_base(t, _min) TEMPLATE_COMPARE_OPERATOR_base(t, _min)
#define TEMPLATE_BINARY_OPERATOR(t) TEMPLATE_BINARY_OPERATOR_s2(t, +) TEMPLATE_BINARY_OPERATOR_s2(t, -) TEMPLATE_BINARY_OPERATOR_s2(t, *) TEMPLATE_BINARY_OPERATOR_s2(t, /)
#define TEMPLATE_BINARY_OPERATOR(t) TEMPLATE_BINARY_OPERATOR_base(t, +) TEMPLATE_BINARY_OPERATOR_base(t, -) TEMPLATE_BINARY_OPERATOR_base(t, *) TEMPLATE_BINARY_OPERATOR_base(t, /)
#define TO_JSON(temp, type, __VA_ARGS__) temp friend void to_json(nlohmann::json &j, const type &v) __VA_ARGS__ temp friend void to_json(nlohmann::ordered_json &j, const type &v) __VA_ARGS__
#define FROM_JSON(temp, type, __VA_ARGS__) temp friend void from_json(const nlohmann::json &j, type &v) __VA_ARGS__ temp friend void from_json(const nlohmann::ordered_json &j, type &v) __VA_ARGS__
#define DEFINE_TRAITS(base)
